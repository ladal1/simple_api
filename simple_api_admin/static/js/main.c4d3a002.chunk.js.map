{"version":3,"sources":["Pages/Actions.js","Pages/Convertor.js","Pages/Common.js","CodeEditor/QueryConstructor.js","Pages/Objects.js","App.js","index.js"],"names":["ActionList","action","bg","Accordion","Card","className","Header","Toggle","as","variant","eventKey","name","Collapse","Body","this","props","schema","actions","object_actions","forEach","e","a","push","object","general","get_all_actions","action_cards","action_card","React","Component","Actions","Row","Col","sm","StringConvert","value","JSON","stringify","NumberConvert","convert","Number","isNaN","Error","BooleanConvert","convertValue","type","length","slice","undefined","output","parse","i","join","validateValueType","console","log","values","Array","isArray","datatypeToFieldType","CustomTypes","required","customType","find","typename","field","options","fields","placeholder","spawn_fields","BreadcrumbMaker","path","items","Breadcrumb","Item","active","Send_to_API","query","callback","error_callback","fetch","method","headers","getCSRF","credentials","body","then","response","json","r","catch","text","api_logout","user","operation","api_check","username","success","reason","stringify_replacer","key","getCookie","cookieValue","document","cookie","cookies","split","trim","substring","decodeURIComponent","setCookie","date","Date","setTime","getTime","toUTCString","makeQuery","parameters","data","parameters_array","data_array","property","not_include","Object","entries","additional_fields","datatype","object_attributes_array","additional_property","query_arguments","ObjectList","state","activeObject","activeChange","setState","item_name","ListGroup","onClick","changeActive","render_item","ObjectActionsButtons","context","show","handleShow","bind","handleClose","id","Modal","onHide","dialogClassName","contentClassName","Button","buttons","modals","action_list","obj","render_action","create_modal","ActionModal","capture_tab","event","keyCode","preventDefault","textbox","target","start","selectionStart","end","selectionEnd","param_fields","data_fields","param","defaultValue","default","validity","handleChangeQuery","update_response","handleChangeFields","send_query","send_mutation","handleIgnoreProperty","caller","newState","fieldTypeValidation","parent_field","additionalFieldTypeValidation","checked","parent_type","field_name","additional_type","Query_to_API","mutation","Mutation_to_API","isValid","isInvalid","onChange","deleteFieldFn","includes","InputGroup","Form","Control","Append","options_form","disabled","hidden","keys","o","toLowerCase","value_type","custom_dataTypes","selected_options","createSubField","handleChangeCustomProperty","deleteAdditionalField","option","addAdditionalField","Text","Checkbox","aria-label","create_field","unshift","closeButton","Title","noValidate","Tabs","defaultActiveKey","transition","Tab","title","FormControl","onKeyDown","readOnly","Footer","Objects","changeObject","TopBar","navbarKey","login_text","loginTextHandler","loginButton","maybeSubmit","login_fn","view","viewChange","display_username","current_user","Dropdown","saved_logins","logins","make_quickLogin","is_anon","Navbar","expand","Brand","href","Nav","activeKey","Link","changeView","OverlayTrigger","placement","delay","hide","overlay","Tooltip","connected","Menu","aria-labelledby","alignRight","logout_fn","Divider","aria-describedby","logout_fn_all","FrontPage","ViewSelector","windows","activeView","errors","reloadSchema","changeUser","logoutUser","logoutAll","val","newArr","concat","filter","View","api_login","App","Container","fluid","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c4d3a002.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Col, Row, Accordion, Card} from \"react-bootstrap\";\r\n\r\nfunction get_all_actions(schema){\r\n    let object_actions = [];\r\n    if (schema === null) {\r\n        return {}\r\n    }\r\n    schema[\"__objects\"].forEach((e) => e.actions.forEach((a) => {object_actions.push(a)}))\r\n    return {object: object_actions, general: schema[\"__actions\"]}\r\n}\r\n\r\n\r\nclass ActionList extends React.Component{\r\n    action_card(action, bg){\r\n        return(\r\n            <Accordion key={action.name}>\r\n                <Card className={bg}>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\r\n                            {action.name}\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>Hello! I'm the body</Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.props.schema === null){\r\n            return(\r\n                <>\r\n                    <strong>Could not obtain schema, check your connection to the API, then refresh</strong>\r\n                </>\r\n            )\r\n        }\r\n        const actions = get_all_actions(this.props.schema);\r\n        let action_cards = []\r\n        actions.general.forEach((a) => {action_cards.push(this.action_card(a, \"bg-object\"))})\r\n        actions.object.forEach((a) => {action_cards.push(this.action_card(a, \"bg-action\"))})\r\n        return (\r\n            <>\r\n                {action_cards}\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass Actions extends React.Component{\r\n    render(){\r\n        return (\r\n            <Row className=\"flex-grow-1 overflow-hidden\">\r\n                <Col sm={12} className='p-4 mh-100'>\r\n                    <ActionList schema={this.props.schema}/>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Actions","function StringConvert(value){\r\n    return JSON.stringify(value)\r\n}\r\n\r\nfunction NumberConvert(value){\r\n    const convert = Number(value)\r\n    if (isNaN(convert)){\r\n        throw new Error(\"Value is not a number\")\r\n    } else {\r\n        return convert\r\n    }\r\n}\r\n\r\nfunction BooleanConvert(value){\r\n    switch(value){\r\n        case 'true':\r\n            return true\r\n        case 'false':\r\n            return false\r\n        default:\r\n            throw new Error(\"Invalid value in field\")\r\n    }\r\n}\r\n\r\nfunction convertValue(value, type){\r\n    try{\r\n        if(type[type.length-1] === \"!\"){\r\n            type = type.slice(0, -1);\r\n            if(value === null || value === undefined){\r\n                return StringConvert(value)\r\n            }\r\n        } else {\r\n            if(value === null || value === undefined){\r\n                return null\r\n            }\r\n        }\r\n        //Array\r\n        if(type[0] === \"[\" && type[type.length - 1] === \"]\"){\r\n            let output = []\r\n            JSON.parse(value).forEach((i) => output.push(convertValue(i, type.slice(1, -1))))\r\n            return \"[\" + output.join(\", \") + \"]\"\r\n        }\r\n        switch(type){\r\n            case 'Integer':\r\n            case 'Float':\r\n                return NumberConvert(value)\r\n            case 'String':\r\n                return StringConvert(value)\r\n            case 'Boolean':\r\n                return BooleanConvert(value)\r\n            case 'Date':\r\n            case 'Time':\r\n            case 'Datetime':\r\n            case 'Duration':\r\n            default:\r\n                return StringConvert(value)\r\n        }\r\n    } catch {\r\n        return StringConvert(value)\r\n    }\r\n}\r\n\r\nfunction validateValueType(value, type){\r\n    console.log(value, type)\r\n    try{\r\n        //Not-nullable\r\n        if(type[type.length-1] === \"!\"){\r\n            type = type.slice(0, -1);\r\n            if(value === null || value === undefined){\r\n                return false\r\n            }\r\n        } else {\r\n            if(value === null || value === undefined){\r\n                return true\r\n            }\r\n        }\r\n        //Array\r\n        if(type[0] === \"[\" && type[type.length - 1] === \"]\"){\r\n            let values = JSON.parse(value)\r\n            console.log(values)\r\n            if (!Array.isArray(values)){\r\n                return false\r\n            }\r\n            for (let i = 0; i < values.length; i++){\r\n                if (!validateValueType(values[i], type.slice(1, -1))){\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        switch(type){\r\n            case 'Integer':\r\n            case 'Float':\r\n                NumberConvert(value)\r\n                break\r\n            case 'String':\r\n                StringConvert(value)\r\n                break\r\n            case 'Boolean':\r\n                BooleanConvert(value)\r\n                break\r\n            case 'Date':\r\n            case 'Time':\r\n            case 'Datetime':\r\n            case 'Duration':\r\n            default:\r\n                return null\r\n        }\r\n        return true\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction datatypeToFieldType(type, CustomTypes=[]){\r\n    //try{\r\n        //Handle full nullable\r\n        let required = (type[type.length-1] !== \"!\")\r\n        if(!required){\r\n            type = type.slice(0, -1)\r\n        }\r\n        //Handle arrays\r\n        //TODO\r\n        let customType = CustomTypes.find(i => (i.typename === type))\r\n        if(typeof customType !== \"undefined\"){\r\n            return {field: \"Select\", required: required, options: customType.fields, placeholder: \"Add Filter: \", spawn_fields: true}\r\n        }\r\n\r\n        switch(type){\r\n            case 'Integer':\r\n            case 'Float':\r\n                return {field: \"Number\", required: required}\r\n            case 'String':\r\n                return {field: \"Text\", required: required}\r\n            case 'Boolean':\r\n                return {field: \"Select\", required: required, options: [{name: \"true\"}, {name: \"false\"}], placeholder: \"Select Bool\", spawn_fields: false}\r\n            case 'Date':\r\n            case 'Time':\r\n            case 'Datetime':\r\n            case 'Duration':\r\n            default:\r\n                return {field: \"Text\", required: required}\r\n        }\r\n    //} catch {\r\n    //    console.log(\"Hrerer\")\r\n    //    return {field: 'Text', required: true}\r\n    //}\r\n}\r\n\r\n\r\nexport {convertValue, validateValueType, datatypeToFieldType};\r\n","import React from \"react\";\r\nimport {Breadcrumb} from \"react-bootstrap\";\r\nimport {convertValue} from \"./Convertor\";\r\n\r\nclass BreadcrumbMaker extends React.Component{\r\n    render(){\r\n        const path = this.props.path\r\n        let items = []\r\n        for (let i=0; i < path.length; i++) {\r\n            items.push(\r\n                <Breadcrumb.Item key={i} active={i === path.length-1}>\r\n                    {path[i]}\r\n                </Breadcrumb.Item>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                <Breadcrumb>\r\n                    {items}\r\n                </Breadcrumb>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction Query_to_API(query, callback=()=>{}){\r\n    console.log(query)\r\n    query = \"{\" + query + \"}\"\r\n    Send_to_API(query, callback)\r\n}\r\n\r\n\r\nfunction Mutation_to_API(mutation, callback=()=>{}){\r\n    mutation = \"mutation simple_mutate{\" + mutation + \"}\"\r\n    Send_to_API(mutation, callback)\r\n}\r\n\r\nfunction Send_to_API(query, callback=()=>{}, error_callback=()=>{}){\r\n    fetch('../api/', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': getCSRF()\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n            query: query\r\n        }),\r\n    }).then((response) => {\r\n        //if (response.status !== 200){\r\n        //TODO Error handling\r\n        //    response.json().then(r => console.log(r))\r\n        //    return \"Hi\"\r\n        //}\r\n        return response.json()})\r\n        .then(r => {callback(r); return r}).catch(e => error_callback(e.text))\r\n}\r\n\r\nfunction api_login(user, callback, error_callback){\r\n    //TODO change to ./login\r\n    fetch('./login',\r\n        {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': getCSRF()\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                username: user, operation:'login'})\r\n        }).then(r => r.json()).then(r => api_check(user, r, callback, error_callback)).catch(e=>error_callback(e.text))\r\n}\r\n\r\nfunction api_logout(user, callback, error_callback){\r\n    //TODO change to ./login\r\n    fetch('./login',\r\n        {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': getCSRF()\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({operation:'logout'})\r\n        }).then(r => r.json()).then(r => api_check(user, r, callback, error_callback)).catch(e=>error_callback(e.text))\r\n}\r\n\r\nfunction api_check(username, response, callback, error_callback){\r\n    console.log(response)\r\n    if(response.success){\r\n        callback(username)\r\n    } else {\r\n        error_callback(response.reason)\r\n    }\r\n}\r\n\r\nfunction stringify_replacer(key, value){\r\n    if (key === \"__typename\"){ return undefined }\r\n    else return value\r\n}\r\n\r\nfunction getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nfunction setCookie(name, value){\r\n    let date = new Date();\r\n    //Expire in a week\r\n    date.setTime(date.getTime()+(7*24*60*60*1000));\r\n    document.cookie = name + \"=\" + value + \"; expires=\" + date.toUTCString();\r\n}\r\n\r\nfunction getSimpleSchema(callback, error_callback){\r\n    const query = `\r\n    {\r\n      __types{\r\n        typename\r\n        fields{\r\n          name\r\n          typename\r\n        }\r\n      }\r\n      __objects{\r\n        name\r\n        pk_field\r\n        actions{\r\n          name\r\n          parameters{\r\n            name\r\n            typename\r\n            default\r\n          }\r\n          data{\r\n            name\r\n            typename\r\n            default\r\n          }\r\n          return_type\r\n          permitted\r\n          deny_reason\r\n          retry_in\r\n        }\r\n      }\r\n    __actions{\r\n      name\r\n      parameters{\r\n        name\r\n        typename\r\n        default\r\n      }\r\n      data{\r\n        name\r\n        typename\r\n        default\r\n      }\r\n      return_type\r\n      permitted\r\n      deny_reason\r\n      retry_in\r\n    }\r\n}`\r\n    Send_to_API(query, (val)=>{if(val !== undefined){callback(val.data)}else{error_callback(val)}}, error_callback)\r\n}\r\n\r\nfunction getCSRF(){\r\n    return getCookie('csrftoken')\r\n}\r\n\r\n\r\nexport {BreadcrumbMaker, Send_to_API, Query_to_API, getSimpleSchema,\r\n        Mutation_to_API, stringify_replacer, getCookie, setCookie, api_login, api_logout};\r\n","import {convertValue} from \"../Pages/Convertor\";\r\n\r\n\r\nfunction makeQuery(action, parameters, data) {\r\n    //TODO Forgotten to add subfields handling\r\n    let parameters_array = []\r\n    let data_array = []\r\n    for (const property in parameters){\r\n        if (!parameters[property].not_include){\r\n            if (Object.entries(parameters[property].additional_fields).length === 0){\r\n                parameters_array.push(property + \": \" + convertValue(parameters[property].value, parameters[property].datatype))\r\n            } else {\r\n                let object_attributes_array = []\r\n                for (const additional_property in parameters[property].additional_fields){\r\n                    object_attributes_array.push(additional_property + \": \" + convertValue(parameters[property].additional_fields[additional_property].value,\r\n                                                                                           parameters[property].additional_fields[additional_property].datatype))\r\n                }\r\n                parameters_array.push(property + \": {\"+ object_attributes_array.join(\", \") + \"}\")\r\n            }\r\n        }\r\n    }\r\n    for (const property in data){\r\n        if (!data[property].not_include){\r\n            if (Object.entries(data[property].additional_fields).length === 0){\r\n                data_array.push(property + \": \" + convertValue(data[property].value, data[property].datatype))\r\n            } else {\r\n                let object_attributes_array = []\r\n                for (const additional_property in data[property].additional_fields){\r\n                    object_attributes_array.push(additional_property + \": \" + convertValue(data[property].additional_fields[additional_property].value,\r\n                                                                                           data[property].additional_fields[additional_property].datatype))\r\n                }\r\n                data_array.push(property + \": {\"+ object_attributes_array.join(\", \") + \"}\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    if(parameters_array.length === 0 && data_array.length === 0){\r\n        return action + \"\\n{\\n  #Data you want to receive back\\n}\"\r\n    }\r\n    let query_arguments = parameters_array.join(\", \")+\r\n        ((parameters_array.length === 0 || data_array.length === 0)? \"\" : \", \" )+\r\n        ((data_array.length === 0)? \"\": (\"data: {\" + data_array.join(\", \") + \"}\"))\r\n    if (query_arguments !== \"\"){\r\n        query_arguments = \"(\" + query_arguments + \")\"\r\n    }\r\n\r\n    return action + query_arguments + \"\\n{\\n  #Data you want to receive back\\n}\"\r\n}\r\n\r\nexport {makeQuery}","import React from \"react\";\r\nimport {Button, Col, Form, FormControl, InputGroup, ListGroup, Modal, Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport {\r\n    BreadcrumbMaker,\r\n    Mutation_to_API,\r\n    Query_to_API,\r\n    stringify_replacer\r\n} from \"./Common\";\r\nimport {datatypeToFieldType, validateValueType} from \"./Convertor\";\r\nimport {makeQuery} from \"../CodeEditor/QueryConstructor\";\r\n\r\n\r\nclass ObjectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activeObject: null}\r\n    }\r\n\r\n    changeActive(object){\r\n        this.props.activeChange(object)\r\n        this.setState({activeObject:object})\r\n    }\r\n\r\n    render_item(item_name){\r\n        return(\r\n            <ListGroup.Item active={this.state.activeObject === item_name} action onClick={() => {this.changeActive(item_name)}} key={item_name}>\r\n                {item_name}\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let items = [];\r\n        if(this.props.schema !== null && this.props.schema !== undefined){\r\n            if(this.props.schema[\"__actions\"].length > 0){\r\n                items.push(\r\n                    <ListGroup.Item action active={this.state.activeObject === null} onClick={() => {this.changeActive(null)}} key={\"__unassigned_actions\"} className={\"bg-object text-dark\"}>\r\n                        Unassigned\r\n                    </ListGroup.Item>\r\n                )\r\n            }\r\n            this.props.schema[\"__objects\"].forEach(\r\n                (i) => {\r\n                    items.push(this.render_item(i.name));\r\n                })\r\n        }\r\n        return (\r\n            <div>\r\n                <h6 className=\"mx-3 m-2\">Objects:</h6>\r\n                <ListGroup>\r\n                    {items}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ObjectActionsButtons extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            show: null\r\n        };\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({show: null})\r\n    }\r\n    handleShow(id){\r\n        this.setState({show: id})\r\n    }\r\n\r\n    create_modal(action){\r\n        return (\r\n            <Modal show={this.state.show === action.name} onHide={this.handleClose} key={action.name} dialogClassName=\"query-dialog\" contentClassName=\"query-dialog\">\r\n                <ActionModal action={action} schema={this.props.schema} object={this.props.object}/>\r\n            </Modal>)\r\n    }\r\n\r\n    render_action(action){\r\n        return(\r\n            <Button variant=\"primary\" onClick={() => {this.handleShow(action.name)}} key={action.name} className=\"m-4\">\r\n                {action.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.props.schema === null || this.props.schema === undefined){\r\n            return(\r\n                <>\r\n                    <strong>Could not obtain schema, check your connection to the API, then refresh</strong>\r\n                </>\r\n            )\r\n        }\r\n\r\n        this.buttons = [];\r\n        this.modals = [];\r\n        if(this.props.object){\r\n            let action_list = this.props.schema[\"__objects\"].find(obj => {return obj.name === this.props.object});\r\n            if(typeof(action_list) !== \"undefined\"){\r\n                action_list.actions.forEach((e) => {\r\n                    this.buttons.push(this.render_action(e))\r\n                    this.modals.push(this.create_modal(e))\r\n                })\r\n            }\r\n        } else if (this.props.object === null){\r\n            let action_list = this.props.schema[\"__actions\"]\r\n            if(typeof(action_list) !== \"undefined\"){\r\n                action_list.forEach((e) => {\r\n                    this.buttons.push(this.render_action(e))\r\n                    this.modals.push(this.create_modal(e))\r\n                })\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                {this.buttons}\r\n                {this.modals}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ActionModal extends React.Component{\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        const action = this.props.action;\r\n        let param_fields = {};\r\n        let data_fields = {};\r\n        if (\"parameters\" in action){\r\n            action.parameters.forEach((param) => {param_fields[param.name] = {defaultValue:(\"default\" in param)? param.default : \"\",\r\n                value:'',\r\n                datatype: param.typename,\r\n                validity:null,\r\n                not_include: false,\r\n                additional_fields:{}}})\r\n        }\r\n        if (\"data\" in action){\r\n            action.data.forEach((data) => {data_fields[data.name] = {defaultValue:(\"default\" in data)? data.default : \"\",\r\n                value:'',\r\n                datatype: data.typename,\r\n                validity:null,\r\n                not_include: false,\r\n                additional_fields:{}}})\r\n        }\r\n\r\n        this.state = {\r\n            action: this.props.action,\r\n            parameters: param_fields,\r\n            data: data_fields,\r\n            query: '',\r\n            response: ''\r\n        };\r\n        this.handleChangeQuery = this.handleChangeQuery.bind(this);\r\n        this.update_response = this.update_response.bind(this);\r\n        this.handleChangeFields = this.handleChangeFields.bind(this)\r\n        this.send_query = this.send_query.bind(this)\r\n        this.send_mutation = this.send_mutation.bind(this)\r\n        this.handleIgnoreProperty = this.handleIgnoreProperty.bind(this)\r\n\r\n    }\r\n\r\n\r\n    handleChangeFields(caller, type, event){\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].value = event.target.value;\r\n        newState[\"query\"] = makeQuery(this.state.action.name, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n        this.fieldTypeValidation(caller, event.target.value, type)\r\n    }\r\n\r\n    handleChangeCustomProperty(parent_field, caller, type, event){\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][parent_field][\"additional_fields\"][caller].value = event.target.value;\r\n        newState[\"query\"] = makeQuery(this.state.action.name, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n        this.additionalFieldTypeValidation(parent_field, caller, event.target.value, type)\r\n    }\r\n\r\n    handleIgnoreProperty(caller, type, event){\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].not_include = event.target.checked;\r\n        newState[\"query\"] = makeQuery(this.state.action.name, newState.parameters, newState.data, this.props.schema)\r\n        if (event.target.checked) {\r\n            newState[type][caller].validity = null\r\n            this.setState(newState)\r\n        } else {\r\n            this.setState(newState)\r\n            this.fieldTypeValidation(caller, this.state[type][caller].value, type)\r\n        }\r\n    }\r\n\r\n    deleteAdditionalField(caller, parent_type, field_name){\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        delete newState[parent_type][caller].additional_fields[field_name]\r\n        newState[\"query\"] = makeQuery(this.state.action.name, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n    }\r\n\r\n    addAdditionalField(caller, parent_type, additional_type, event){\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[parent_type][caller].additional_fields[event.target.value] = {datatype:additional_type, value: '', validity:null}\r\n        newState[\"query\"] = makeQuery(this.state.action.name, newState.parameters, newState.data, this.props.schema)\r\n        this.setState(newState)\r\n    }\r\n\r\n    additionalFieldTypeValidation(parent_field, caller, value, type){\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][parent_field][\"additional_fields\"][caller].validity = validateValueType(value, newState[type][parent_field][\"additional_fields\"][caller].datatype)\r\n        this.setState(newState)\r\n    }\r\n\r\n    fieldTypeValidation(caller, value, type){\r\n        let newState = {parameters: this.state.parameters, data: this.state.data}\r\n        newState[type][caller].validity = validateValueType(value, newState[type][caller][\"datatype\"])\r\n        this.setState(newState)\r\n    }\r\n\r\n    handleChangeQuery(e){\r\n        this.setState({query: e.target.value});\r\n    }\r\n\r\n    update_response(value){\r\n        console.log(value)\r\n        if ('data' in value || 'errors' in value){\r\n            this.setState({response: JSON.stringify(value, stringify_replacer, 2)})\r\n            return\r\n        }\r\n        if (typeof value === 'string'){\r\n            this.setState({response: value})\r\n        }\r\n    }\r\n\r\n    send_query(){\r\n        Query_to_API(this.state.query, this.update_response)\r\n    }\r\n\r\n    send_mutation(){\r\n        Mutation_to_API(this.state.query, this.update_response)\r\n    }\r\n\r\n    capture_tab = event => {\r\n        if (event.keyCode === 9) {\r\n            event.preventDefault();\r\n            let textbox = event.target\r\n            let start = textbox.selectionStart\r\n            let end = textbox.selectionEnd\r\n            let value = textbox.value\r\n\r\n            textbox.value = value.substring(0, start) + \"  \" + value.substring(end)\r\n            textbox.selectionStart = textbox.selectionEnd = start + 2;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //TODO maybe reset additional fields\r\n        this.setState({query:makeQuery(this.state.action.name, this.state.parameters, this.state.data, this.props.schema)})\r\n    }\r\n\r\n    createSubField(name, type, isValid, isInvalid, placeholder, onChange, deleteFieldFn){\r\n        const safe_form_fields = [\"Text\", \"Number\", \"Time\"]\r\n        if (safe_form_fields.includes(type.field)){\r\n            return (\r\n                <InputGroup key={name}>\r\n                    <Form.Control\r\n                        type={type.field}\r\n                        isValid={isValid}\r\n                        isInvalid={isInvalid}\r\n                        placeholder={placeholder}\r\n                        onChange={onChange}/>\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary p-0\" onClick={deleteFieldFn}><i className=\"bi bi-x text-danger remove-field-x\"/></Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>)\r\n        }\r\n        if (type.field === \"Select\"){\r\n            let options_form = [<option key={\"__Null_NonSelection\"} disabled hidden value={\"Select...\"}>Select...</option>];\r\n            Object.keys(type.options).forEach(((o) =>\r\n                options_form.push(<option key={type.options[o].name}>{type.options[o].name}</option>)\r\n            ))\r\n            return (\r\n                <InputGroup key={name}>\r\n                    <Form.Control\r\n                        as={type.field.toLowerCase()}\r\n                        isValid={isValid}\r\n                        isInvalid={isInvalid}\r\n                        defaultValue={\"Select...\"}\r\n                        onChange={onChange}>\r\n                        {options_form}\r\n                    </Form.Control>\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary p-0\" onClick={deleteFieldFn}><i className=\"bi bi-x text-danger remove-field-x\"/></Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>)\r\n        }\r\n    }\r\n\r\n    create_field(field, type, value_type, custom_dataTypes=[]){\r\n        const datatype = datatypeToFieldType(value_type, custom_dataTypes)\r\n        if (datatype.field === \"Select\"){\r\n            let selected_options = []\r\n            Object.keys(this.state[type][field][\"additional_fields\"]).forEach((key) => {\r\n                selected_options.push(\r\n                    this.createSubField(\r\n                            key,\r\n                            datatypeToFieldType(this.state[type][field][\"additional_fields\"][key][\"datatype\"]),\r\n                            this.state[type][field][\"additional_fields\"][key][\"validity\"] !== null && this.state[type][field][\"additional_fields\"][key][\"validity\"],\r\n                            this.state[type][field][\"additional_fields\"][key][\"validity\"] !== null && !this.state[type][field][\"additional_fields\"][key][\"validity\"],\r\n                            key,\r\n                            (e) => {this.handleChangeCustomProperty(field, key, type, e)},\r\n                            ()=>{this.deleteAdditionalField(field, type, key)}\r\n                    )\r\n                )})\r\n            let options = [<option key={\"__Null_NonSelection\"} disabled hidden value={datatype.placeholder}>{datatype.placeholder}</option>];\r\n            datatype.options.forEach((option)=>{options.push(<option key={option.name}>{option.name}</option>)})\r\n            return(\r\n                <div key={field}>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                        as=\"select\"\r\n                        defaultValue={datatype.placeholder}\r\n                        onChange={(e) => {\r\n                            if (datatype.spawn_fields) {\r\n                                this.addAdditionalField(field, type, datatype.options.find(i => (i.name === e.target.value)).typename, e)\r\n                            } else {\r\n                                this.handleChangeFields(field, type, e)\r\n                            }\r\n                        }}>\r\n                        {options}\r\n                        </Form.Control>\r\n                        {(datatype.required) &&\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text>Ignore:</InputGroup.Text>\r\n                            <InputGroup.Checkbox aria-label=\"Force null for this field\"\r\n                                                 onChange={(e) => {this.handleIgnoreProperty(field, type, e)}}/>\r\n                        </InputGroup.Append>}\r\n                    </InputGroup>\r\n                    {selected_options}\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <InputGroup key={field} >\r\n                <Form.Control\r\n                    isValid={this.state[type][field][\"validity\"] !== null && this.state[type][field][\"validity\"]}\r\n                    isInvalid={this.state[type][field][\"validity\"] !== null && !this.state[type][field][\"validity\"]}\r\n                    type={datatype.field}\r\n                    placeholder={field}\r\n                    defaultValue={this.state[type][field][\"defaultValue\"]}\r\n                    onChange={(e) => {this.handleChangeFields(field, type, e)}} />\r\n                {(datatype.required) &&\r\n                <InputGroup.Append>\r\n                    <InputGroup.Text>Ignore:</InputGroup.Text>\r\n                    <InputGroup.Checkbox aria-label=\"Force null for this field\"\r\n                                         onChange={(e) => {this.handleIgnoreProperty(field, type, e)}}/>\r\n                </InputGroup.Append>}\r\n            </InputGroup>)\r\n    }\r\n\r\n    render(){\r\n        let action = this.state.action;\r\n        let param_fields = [];\r\n        let data_fields = [];\r\n        Object.keys(this.state.parameters).forEach((param) => {param_fields.push(this.create_field(param, \"parameters\", this.state.parameters[param].datatype, this.props.schema[\"__types\"]))})\r\n        Object.keys(this.state.data).forEach((data) => {data_fields.push(this.create_field(data, \"data\", this.state.data[data].datatype, this.props.schema[\"__types\"]))})\r\n        if(param_fields.length){\r\n            param_fields.unshift(<strong key=\"param_title\">Parameters:</strong>)\r\n        }\r\n        if(data_fields.length){\r\n            data_fields.unshift(<strong key=\"data_title\">Data:</strong>)\r\n        }\r\n        const query = this.state.query;\r\n        const response = this.state.response;\r\n        return(\r\n            <>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{action.name}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"container-fluid\">\r\n                    <Row className=\"container-fluid d-flex h-100 overflow-hidden p-1\" >\r\n                        <Col sm={5} className=\"h-100 flex-column\">\r\n                            <Form className=\"flex-grow-1 h-100\" noValidate>\r\n                                {param_fields}\r\n                                {data_fields}\r\n                            </Form>\r\n                        </Col>\r\n                        <Col sm={7} className=\"pb-1\">\r\n                            <Form className=\"h-100 flex-column modal-tabs\" noValidate >\r\n                                <Tabs variant=\"pills\" defaultActiveKey=\"query\" transition={false} className=\"nav-fill\">\r\n                                    <Tab eventKey=\"query\" title=\"Query:\">\r\n                                        <FormControl as=\"textarea\" className=\"no-resize border-right\" value={query} onChange={this.handleChangeQuery} onKeyDown={this.capture_tab}/>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"response\" title=\"Response:\">\r\n                                        <FormControl readOnly as=\"textarea\" className=\"no-resize border-right\" value={response}/>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"listView\" title=\"List view:\">\r\n                                    </Tab>\r\n                                </Tabs>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => {this.update_response(this.state.query)}}>TEST</Button>\r\n                    <Button variant=\"primary\" onClick={this.send_query}>Query</Button>\r\n                    <Button variant=\"primary\" onClick={this.send_mutation}>Mutation</Button>\r\n                </Modal.Footer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Objects extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activeObject: null}\r\n\r\n        this.changeObject = this.changeObject.bind(this);\r\n    }\r\n\r\n    changeObject(object){\r\n        this.setState({activeObject: object})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"flex-grow-1 overflow-hidden\">\r\n                <Col sm={2} className='bg-secondary pl-4 mh-100'>\r\n                    <ObjectList activeChange={this.changeObject} schema={this.props.schema}/>\r\n                </Col>\r\n                <Col sm={10} className='overflow-auto py-2 mh-100'>\r\n                    <BreadcrumbMaker path={[\"Objects\", this.state.activeObject]}/>\r\n                    <ObjectActionsButtons  object={this.state.activeObject} schema={this.props.schema}/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Objects;\r\n","import React from 'react';\n\nimport Actions from \"./Pages/Actions\"\nimport Objects from \"./Pages/Objects\"\nimport {\n    Container,\n    Navbar,\n    Nav,\n    Dropdown,\n    Card,\n    FormControl,\n    InputGroup,\n    Button,\n    OverlayTrigger,\n    Tooltip\n} from \"react-bootstrap\";\nimport 'regenerator-runtime/runtime'\nimport {api_login, api_logout, getCookie, getSimpleSchema, setCookie} from \"./Pages/Common\";\n\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {navbarKey: \"Objects\", login_text: \"\"}\n        this.loginTextHandler = this.loginTextHandler.bind(this)\n        this.loginButton = this.loginButton.bind(this)\n        this.maybeSubmit = this.maybeSubmit.bind(this)\n    }\n\n    loginTextHandler(e){\n        this.setState({login_text:e.target.value})\n    }\n\n    loginButton(){\n        this.props.login_fn(this.state.login_text)\n    }\n\n    changeView(view){\n        this.setState({navbarKey:view})\n        this.props.viewChange(view)\n    }\n\n    maybeSubmit(e){\n        if (e.key === \"Enter\"){\n            this.loginButton()\n        }\n    }\n\n    make_quickLogin(username){\n        let display_username = username\n        let key = \"login_\"\n        if (username === null){\n            display_username = <em>Anonymous</em>\n            key += \"anonymous\"\n        } else {\n            key += username\n        }\n        if (username === this.props.current_user){\n            display_username = <strong>{display_username}</strong>\n        }\n        return(<Dropdown.Item onClick={() => {if (this.props.current_user !== username){this.props.login_fn(username)}}} key={key}>{display_username}</Dropdown.Item>)\n    }\n\n    render() {\n        let saved_logins = []\n        this.props.logins.forEach((e) => {saved_logins.push(this.make_quickLogin(e))})\n        const is_anon = (this.props.current_user === null)\n\n        return (\n            <Navbar variant={\"dark\"} expand=\"lg\" className={\"navbar-expand-lg text-white navbar-expand bg-primary\"}>\n                <div className=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\n                    <Navbar.Brand href=\"https://www.github.com/karlosss/simple_api\">Simple-API</Navbar.Brand>\n                    <div className=\"collapse navbar-collapse\">\n                        <Nav variant=\"pills\" activeKey={this.state.navbarKey}>\n                            <Nav.Link onClick={() => {this.changeView(\"objects\")}} eventKey=\"objects\">Objects</Nav.Link>\n                            <Nav.Link onClick={() => {this.changeView(\"actions\")}} eventKey=\"actions\">Actions</Nav.Link>\n                        </Nav>\n                    </div>\n                </div>\n                <div className=\"collapse navbar-collapse pe-4\">\n                    <ul className=\"navbar-nav me-auto ms-auto\">\n                        <OverlayTrigger\n                            placement=\"left\"\n                            delay={{ show: 250, hide: 400 }}\n\n                            overlay={\n                                <Tooltip id={`tooltip`}>\n                                    <strong>{this.props.connected? \"Succesfully fetched schema from API\": \"Failed to fetch schema from API\"}</strong>.\n                                </Tooltip>\n                            }>\n                            {this.props.connected? <i className=\"bi bi-check connected-icon text-success\"/>  : <i className=\"bi bi-x connected-icon text-danger\"/>}\n                        </OverlayTrigger>\n                        <Dropdown >\n                            <Dropdown.Toggle id=\"login-dropdown\" className=\"nav-link text-white\">\n                                {is_anon ? \"Anonymous\" : this.props.current_user}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu className=\"dropdown-menu large-dropdown\" aria-labelledby=\"navbarDropdown\" alignRight>\n                                {!is_anon ?\n                                    <>\n                                        <Dropdown.Item onClick={() => this.props.logout_fn(this.props.current_user)}>Logout Current User</Dropdown.Item>\n                                        <Dropdown.Divider />\n                                    </> : <></>}\n                                <label className=\"px-4\">Login:</label>\n                                <InputGroup className=\"mb-3 px-4\">\n                                    <FormControl\n                                        placeholder=\"Username\"\n                                        aria-label=\"Username to login as\"\n                                        aria-describedby=\"basic-addon2\"\n                                        value={this.state.login_text}\n                                        onChange={this.loginTextHandler}\n                                        onKeyDown={this.maybeSubmit}\n                                    />\n                                    <InputGroup.Append>\n                                        <Button onClick={this.loginButton} variant=\"outline-primary\" type=\"submit\">Login</Button>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                                <Dropdown.Divider />\n                                {saved_logins}\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={this.props.logout_fn_all}>Logout All</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </ul>\n                </div>\n            </Navbar>\n        )\n    }\n}\n\n\nclass FrontPage extends React.Component{\n    render() {\n        //                <QueryEditor/>\n        return (\n            <div>\n                <Card>\n                    <Card.Body>Hi! I'm the frontpage, click above on \"Objects\" or \"Actions\" to start exploring your API</Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nclass ViewSelector extends React.Component{\n    constructor(props) {\n        super(props);\n        const windows = {\n            'frontpage': FrontPage,\n            'objects': Objects,\n            'actions': Actions}\n        let saved_logins = getCookie(\"savedLogins\")\n        let logins = [null]\n        if(!saved_logins){\n            setCookie(\"savedLogins\", JSON.stringify(logins))\n        } else {\n            logins = JSON.parse(getCookie(\"savedLogins\"))\n        }\n        this.state = {activeView: FrontPage, windows:windows, logins:logins, current_user:null, schema:null, errors:null}\n        this.reloadSchema()\n        this.changeView = this.changeView.bind(this);\n        this.changeUser = this.changeUser.bind(this);\n        this.logoutUser = this.logoutUser.bind(this);\n        this.logoutAll = this.logoutAll.bind(this);\n    }\n\n    reloadSchema(){\n        getSimpleSchema((schema)=>{this.setState({schema:schema})}, (e) => {console.log(e); this.setState({schema:null})})\n    }\n\n    changeView(view){\n        this.reloadSchema()\n        console.log(this.state.schema)\n        this.setState({activeView: this.state.windows[view]})\n    }\n\n    changeUser(username){\n        if (!this.state.logins.includes(username)){\n            let newArr = this.state.logins.concat(username)\n            this.setState({logins:newArr})\n            setCookie(\"savedLogins\", JSON.stringify(newArr))\n        }\n        this.setState({current_user:username})\n    }\n\n    logoutUser(username){\n        if (username === null){\n            return\n        }\n        if (username === this.state.current_user){\n            this.setState({current_user:null})\n        }\n        let newArr = this.state.logins.filter(e => e !== username)\n\n        this.setState({logins: newArr})\n        setCookie(\"savedLogins\", JSON.stringify(newArr))\n    }\n\n    logoutAll(){\n        this.setState({logins:[null], current_user:null})\n        setCookie(\"savedLogins\", JSON.stringify([null]))\n    }\n\n\n    render() {\n        const View = this.state.activeView;\n        return(\n            <>\n                <TopBar viewChange={this.changeView}\n                        logins={this.state.logins}\n                        login_fn={(user) => {api_login(user, this.changeUser, console.log)}}\n                        logout_fn={(user) => {api_logout(user, this.logoutUser, console.log)}}\n                        logout_fn_all={() => {api_logout(this.state.current_user, this.logoutAll, console.log)}}\n                        current_user={this.state.current_user}\n                        connected={this.state.schema !== null}/>\n                <View schema={this.state.schema}/>\n            </>\n        )\n    }\n}\n\n\nconst App = () => {\n    return (\n        <Container fluid className=\"container-fluid d-flex flex-column vh-100 overflow-hidden p-0\">\n            <ViewSelector/>\n        </Container>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport './App.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}